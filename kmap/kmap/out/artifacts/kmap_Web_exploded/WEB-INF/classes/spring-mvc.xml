<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--添加注解驱动-->
    <context:annotation-config></context:annotation-config>
    <!--解决了controller注解的使用前提配置，也即HandlerMapping能够知道谁来处理请求-->

    <mvc:annotation-driven>
        <mvc:message-converters>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain;charset=UTF-8</value>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json; charset=UTF-8</value>
                            <value>application/x-www-form-urlencoded; charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 扫描文件（自动将servicec层注入） -->
    <context:component-scan base-package="org.andy.kmap.controller"/>
    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="org.andy.kmap.model.service"/>
    <!---扫描dao层自动将dao层注入-->
    <context:component-scan base-package="org.andy.kmap.model.dao"/>

    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"  />

    <!--自动AOP-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close" >
        <property name="driverClassName">
            <value>${driverClassName}</value>
        </property>
        <property name="url">
            <value>${url}</value>
        </property>
        <property name="username">
            <value>${username}</value>
        </property>
        <property name="password">
            <value>${password}</value>
        </property>
        <!-- 连接池最大使用连接数 -->
        <property name="maxTotal">
            <value>${maxActive}</value>
        </property>
        <!-- 初始化连接大小 -->
        <property name="initialSize">
            <value>${initialSize}</value>
        </property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWaitMillis">
            <value>${maxWait}</value>
        </property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle">
            <value>${maxIdle}</value>
        </property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle">
            <value>3</value>
        </property>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandonedOnMaintenance">
            <value>true</value>
        </property>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout">
            <value>180</value>
        </property>
        <!-- 连接属性 -->
        <property name="connectionProperties">
            <value>clientEncoding=UTF-8</value>
        </property>
    </bean>

    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
        <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
        <bean class="org.andy.kmap.filter.LoginInterceptors"></bean>
    </mvc:interceptors>

    <!--配置jdbctemplate-->
    <bean id="JdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"
            />

    <!-- mybatis文件配置，扫描所有mapper文件 -->

    <!--<bean id="sqlSessionFactory"-->
          <!--class="org.mybatis.spring.SqlSessionFactoryBean"-->
          <!--p:configLocation="mybatis-configuration.xml"-->
          <!--p:dataSource-ref="dataSource"-->
          <!--p:mapperLocations="classpath:mappers/*.xml"/>-->

    <!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"-->
          <!--p:basePackage="org.andy.kmap.model.dao"-->
          <!--p:sqlSessionFactoryBeanName="sqlSessionFactory"/>-->
    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 申明JavaMailSenderImpl对象 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="host" value="smtp.163.com" />
        <property name="username" value="Echo_rejoice@163.com" />
        <property name="password" value="wanglu19940905" />
        <property name="port" value="25"/>
        <property name="javaMailProperties">
            <props>
                <!-- 设置认证开关 -->
                <prop key="mail.smtp.auth">true</prop>
                <!-- 设置发送延时 -->
                <prop key="mail.smtp.timeout">25000</prop>
            </props>
        </property>
    </bean>
    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--配置俩个视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            p:prefix="/" p:suffix=".jsp" p:order="1"
            />

    <bean id="viewResolver2" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/" p:suffix=".html" p:order="2"
            />
</beans>